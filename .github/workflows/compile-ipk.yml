#
# This is free software, lisence use MIT.
#
#
# <https://github.com/Chikage0o0/openwrt-packages>
#

name: Compile-Ipk
on:
  repository_dispatch:
    types: [Compile-IPK]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      rebuild:
        description: 'rebuild all packages'
        required: false
        default: 'false'

env:
  REMOTE_PATH: drive:Public/Openwrt/Package
  VERSION: 22.03.5
  USE_TG: false

jobs:
  compile-ipk:
    runs-on: Ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        target: [ramips-mt7621]

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 2

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: 准备环境
        run: |
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          mkdir -p /workdir/packages/
          mkdir -p /workdir/error/
          rclone copy $REMOTE_PATH/$VERSION/${{matrix.target}} /workdir/packages/ || true
          docker run -dt --name imagebuilder \
            -v /workdir/packages/:/builder/packages/  \
            -v $GITHUB_WORKSPACE/diy/sh/compile.sh:/builder/compile.sh \
            -v $GITHUB_WORKSPACE/diy/files/${{matrix.target}}/:/builder/files/  \
            -v $GITHUB_WORKSPACE/:/builder/git_workspace/ \
            -v $GITHUB_WORKSPACE/diy/config/${{matrix.target}}.config:/builder/custom.config \
            -v /workdir/bin/:/builder/bin/  \
            openwrt/sdk:${{matrix.target}}-$VERSION
          sudo chmod 777 /workdir -R

      - name: SSH connection to Actions
        if: github.event.inputs.ssh == 'true'
        uses: mxschmitt/action-tmate@v1

      - name: 编译
        if: github.event.inputs.ssh != 'true'
        run: docker exec imagebuilder /bin/bash /builder/compile.sh ${{ github.event.inputs.rebuild }}

      - name: 编译完成后清理
        run: |
          docker rm -f sdk
          if [`ls -A /workdir/error/` == ""] ;then
            echo "compile_error=false" >> $GITHUB_ENV
          else
            echo "compile_error=true" >> $GITHUB_ENV
          fi
          sudo chown -R $USER:$GROUPS /workdir
          sudo chown -R $USER:$GROUPS $GITHUB_WORKSPACE

      - name: 如果出现失败上传Artifact
        if: env.compile_error == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.target}}-error
          path: /workdir/error/

      - name: 如果出现失败通知TG
        if: env.compile_error == 'true' && env.USE_TG == 'true'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: some errors in compile

      - name: 上传至目标存储
        run: |
          rclone delete $REMOTE_PATH/$VERSION/${{matrix.target}}/ || true
          rclone copy /workdir/packages/ $REMOTE_PATH/$VERSION/${{matrix.target}}/
