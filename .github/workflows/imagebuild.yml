#
# This is free software, lisence use MIT.
#
#
# <https://github.com/Chikage0o0/openwrt-packages>
#

name: Image-Build
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 0 0 1 * *

env:
  REMOTE_PATH: drive:Public/Openwrt/Package
  VERSION: 22.03.5
  USE_TG: false

jobs:
  image-build:
    runs-on: Ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        target: [ramips-mt7621]

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: 准备环境
        run: |
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          echo $USER #GROUPS
          mkdir -p /workdir/packages/
          mkdir -p /workdir/error/
          sudo chmod 777 /workdir -R
          rclone copy $REMOTE_PATH/$VERSION/${{matrix.target}} /workdir/packages/ || true
          docker run -dt --name imagebuilder \
            -v /workdir/packages/:/builder/packages/  \
            -v $GITHUB_WORKSPACE/diy/sh/target/${{matrix.target}}.sh:/builder/target.sh \
            -v $GITHUB_WORKSPACE/diy/files/${{matrix.target}}/:/builder/files/  \
            -v $GITHUB_WORKSPACE/:/builder/git_workspace/ \
            -v /workdir/bin/target/:/builder/bin/targets/  \
            openwrt/imagebuilder:${{matrix.target}}-$VERSION

      - name: SSH connection to Actions
        if: github.event.inputs.ssh == 'true'
        uses: mxschmitt/action-tmate@v1

      - name: 编译
        if: github.event.inputs.ssh != 'true'
        run: docker exec imagebuilder /bin/bash /builder/target.sh

      - name: 编译完成后清理
        run: |
          docker rm -f imagebuilder
          sudo chown -R $USER:$GROUPS /workdir
          sudo chown -R $USER:$GROUPS $GITHUB_WORKSPACE
          if [[ `find /workdir/bin/target/ -name *.img.gz -or  -name *.bin` ]] ;then
            echo "image_build=true" >> $GITHUB_ENV
          else
            echo "image_build=false" >> $GITHUB_ENV
          fi

      - name: 移动编译完成的固件
        if: env.image_build == 'true'
        run: |
          mkdir /workdir/image
          for img in `find /workdir/bin/target/ -name *.img.gz -or  -name *sysupgrade.bin`; do
            mv $img /workdir/image
          done

      - name: 生成Release信息
        id: tag
        if: env.image_build == 'true'
        run: |
          echo "::set-output name=release_body::本次固件编译于$(date +"%Y.%m.%d")"

      - name: 上传固件到Release
        uses: ncipollo/release-action@v1
        with:
          name: Openwrt ${{env.VERSION}}_${{matrix.target}}
          allowUpdates: true
          body: ${{ steps.tag.outputs.release_body }}
          tag: Openwrt_${{env.VERSION}}_${{matrix.target}}
          commit: main
          replacesArtifacts: true
          token: ${{ secrets.GIT_TOKEN }}
          artifacts: /workdir/image/*
